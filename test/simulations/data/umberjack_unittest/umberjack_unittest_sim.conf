# Configuration file for umberjack unit test simulated data.  
# Uses python config syntax, similar to windows .ini syntax: See https://docs.python.org/2/library/configparser.html
# All of the simulated data will be generated in the same directory as this config file.

[sim]
# Filename prefix used for output files. Do not include the parent directory.
FILENAME_PREFIX = umberjack_unittest

# Total individuals in the population.
NUM_INDIV = 100

# Random seed for Population Growth simulator, INDELible, ART, FastTree
SEED=9828384

# Total number of codon sites in the genome.  The number of scaling rates must divide evenly into the number of codon sites.
NUM_CODON_SITES = 160


# ---------------------------
# A Coalescent Tree with Selection Effects is generated by a Population Growth Simulator.  Tree written to ./$(FILENAME_PREFIX).nwk.
# This tree forms the topology for the sequences that will be generated by INDELible.
# INDELible output files will follow this format:
# ./$(scaling rate)/$(FILENAME_PREFIX).$(scaling rate).fasta:  unaligned population sequences  (leafs)
# ./$(scaling rate)/$(FILENAME_PREFIX).$(scaling rate)_ANCESTRAL.fasta:  ancestral sequences  (inner nodes)
# ./$(scaling rate)/$(FILENAME_PREFIX).$(scaling rate)_RATES.csv:  Association of Codon Site, Mutation Scaling Rate, dN/dS Gamma Rate Class Category, expected dN/dS
# ./$(scaling rate)/$(FILENAME_PREFIX).$(scaling rate)_TRUE.fasta:  Aligned population sequences (leafs)
#
# A separate population will be generated that combines the codon sites at different mutation scaling rates generated by INDELible.
# Each codon site is chosen randomly from the populations of different mutation scaling rates such at the resulting genome has each mutation scaling rate evenly represented.
# The resulting population fasta will be found in ./mixed/$(FILENAME_PREFIX).fasta
# ---------------------------

# Directory path of parent directory of INDELible executable
INDELIBLE_BIN_DIR = ../../bin/indelible/indelible_1.03/linux_x64

# Comma-delimited list of mutation scaling rates.  
# The number of scaling rates must divide evenly into the number of codon sites.
# A separate population will be generated at each mutation scaling rate.
INDELIBLE_SCALING_RATES = 5,10,20,50



# ---------------------------
# ART simulates paired-end miseq reads for the population sequence.
# ART output files:
# ./mixed/reads/$(FILENAME_PREFIX).mixed.reads.1.fq: simulated reads - mate1
# ./mixed/reads/$(FILENAME_PREFIX).mixed.reads.2.fq: simulated reads - mate2
# ./mixed/reads/$(FILENAME_PREFIX).mixed.reads.errFree.1.fq: simulated reads - mate1 - perfect quality
# ./mixed/reads/$(FILENAME_PREFIX).mixed.reads.errFree.2.fq: simulated reads - mate2 - perfect quality
# ./mixed/reads/$(FILENAME_PREFIX).mixed.reads.errFree.sam: Position of simulated reads with perfect quality within the population sequences.
# ---------------------------

# Directory path of parent directory of ART executable
ART_BIN_DIR = ../../bin/art/art_3.11.14/linux_x64

# File path of miseq read1 profile tsv
ART_QUAL_PROFILE_TSV1 = ../../bin/art/art_3.11.14/Illumina_profiles/EmpMiSeq250R1.txt

# File path of miseq read2 profile tsv
ART_QUAL_PROFILE_TSV2 = ../../bin/art/art_3.11.14/Illumina_profiles/EmpMiSeq250R2.txt

# Population fold coverage.  I.e.  How many times does each individual in the population (leafs only) get sequenced?
ART_FOLD_COVER = 2

# Mean fragment size
ART_MEAN_INSERT = 346

# Standed deviation in fragment size
ART_STDEV_INSERT = 75

# Directory path of parent directory of Picard Tools.  Must be Picard v 1.128 or later.
PICARD_BIN_DIR = ../../bin/picard/picard_1.129

# ---------------------------
# BWA aligns the ART simulated reads against the population consensus.
# BWA alignment output written to ./mixed/aln/$(FILENAME_PREFIX).sam
# ---------------------------

# Directory path of parent directory of BWA binaries
BWA_BIN_DIR = ../../bin/bwa/bwa_0.7.12/linux_x64

# Number of processors to give to BWA
PROCS = 2

# ---------------------------
# FastTree and HyPhy are used to get the true tree and dN/dS of the full population, which may be slightly different from what is input to INDELible depending on population size.
# ---------------------------

# Filepath to FastTree executable
FASTTREE_EXE = ../../bin/fasttree/fasttree_2.1.7/linux_x64/FastTree

# Filepath to HYPHY executable
HYPHY_EXE = ../../bin/hyphy/hyphy_2.2.3/linux_x64/HYPHYMP

# Directory path to Hyphy Template Batch Files
HYPHY_BASEPATH = ../../bin/hyphy/hyphy_2.2.3/res/TemplateBatchFiles
